"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const authMiddleware_1 = require("../middlewares/authMiddleware");
const validateForm_1 = require("../middlewares/validateForm");
const vendor_controller_1 = __importDefault(require("../controllers/vendor.controller"));
const rateLimit_1 = __importDefault(require("../middlewares/rateLimit"));
const socket_controller_1 = __importDefault(require("../controllers/socket.controller"));
const important_variables_1 = require("../utils/important-variables");
const auth_controller_1 = __importDefault(require("../controllers/auth.controller"));
const common_controller_1 = __importDefault(require("../controllers/common.controller"));
const router = express_1.default.Router();
router.post('/login', (0, authMiddleware_1.setRole)(important_variables_1.UserRole.Vendor), validateForm_1.validateLogin, auth_controller_1.default.login);
router.post('/signup', (0, authMiddleware_1.setRole)(important_variables_1.UserRole.Vendor), validateForm_1.validateVendorSignup, auth_controller_1.default.signup);
router.post('/verify-otp', (0, authMiddleware_1.setRole)(important_variables_1.UserRole.Vendor), auth_controller_1.default.verifyOtp);
router.post('/resend-otp', (0, authMiddleware_1.setRole)(important_variables_1.UserRole.Vendor), rateLimit_1.default, auth_controller_1.default.resendOtp);
router.use(authMiddleware_1.authMiddleware, (0, authMiddleware_1.requireRole)(important_variables_1.UserRole.Vendor));
router.get('/logout', auth_controller_1.default.logout);
router.post('/video-call/join-call', socket_controller_1.default.getJoinCall);
router.get('/chat-room/', socket_controller_1.default.getAllChatRooms);
router.post('/chat-room/join-room', socket_controller_1.default.getOrCreateChatRoom);
router.get('/notifications', common_controller_1.default.getNotifications);
router.get('/unread-messages', socket_controller_1.default.getUnreadAllMessages);
router.patch('/message/read', common_controller_1.default.markMessageRead);
router.patch('/notifications/read', common_controller_1.default.notificationReadStatus);
router.delete('/notifications/delete/:id', common_controller_1.default.deleteNotification);
router.get('/profile', vendor_controller_1.default.getVendorProfile);
router.patch('/profile/update', vendor_controller_1.default.updateVendorProfile);
router.patch('/profile/email/', vendor_controller_1.default.updateEmailProfile);
router.patch('/profile/email-update', vendor_controller_1.default.verifyEmailProfile);
router.patch('/profile/password-change', vendor_controller_1.default.passwordChangeProfile);
exports.default = router;
